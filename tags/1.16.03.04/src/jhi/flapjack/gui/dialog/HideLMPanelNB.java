// Copyright 2009-2016 Information & Computational Sciences, JHI. All rights
// reserved. Use is subject to the accompanying licence terms.

package jhi.flapjack.gui.dialog;

import java.awt.*;
import javax.swing.*;

import jhi.flapjack.data.*;
import jhi.flapjack.gui.*;

import scri.commons.gui.*;

/**
 * This dialog handles BOTH lines and markers - hence all the if statements. But
 * it's still quicker/easier to just combine it all into a single class, rather
 * than having two practically identical (but separate) classes.
 */
class HideLMPanelNB extends JPanel
{
	private String i18n;

	public HideLMPanelNB(HideLMDialog dialog, GTView view, boolean markers)
	{
		initComponents();

		setBackground((Color)UIManager.get("fjDialogBG"));
		hidePanel.setBackground((Color)UIManager.get("fjDialogBG"));
		showPanel.setBackground((Color)UIManager.get("fjDialogBG"));

		i18n = markers ? "markers" : "lines";

		int total, selected, unselected;

		if (i18n.equals("markers"))
		{
			total = view.countGenuineMarkers();
			selected = view.countSelectedMarkers();
		}
		else
		{
			total = view.lineCount();
			selected = view.countSelectedLines();
		}

		unselected = total - selected;

		rHideSelected.setText(RB.format("gui.dialog.NBHideLMPanel." + i18n + ".rHideSelected", selected, total));
		rHideUnselected.setText(RB.format("gui.dialog.NBHideLMPanel." + i18n + ".rHideUnselected", unselected, total));
		RB.setMnemonic(rHideSelected, "gui.dialog.NBHideLMPanel." + i18n + ".rHideSelected");
		RB.setMnemonic(rHideUnselected, "gui.dialog.NBHideLMPanel." + i18n + ".rHideUnselected");

		hidePanel.setBorder(BorderFactory.createTitledBorder(RB.getString("gui.dialog.NBHideLMPanel." + i18n + ".hidePanel.title")));
		RB.setText(hideLabel, "gui.dialog.NBHideLMPanel." + i18n + ".hideLabel");
		showPanel.setBorder(BorderFactory.createTitledBorder(RB.getString("gui.dialog.NBHideLMPanel." + i18n + ".showPanel.title")));
		RB.setText(showLabel, "gui.dialog.NBHideLMPanel." + i18n + ".showLabel");
		RB.setText(bRestore, "gui.dialog.NBHideLMPanel." + i18n + ".bRestore");

		if (SystemUtils.isMacOS())
			hideHint.setText(
				RB.format("gui.dialog.NBHideLMPanel." + i18n + ".hideHintOSX",
				RB.getString("gui.StatusBar.cmnd")));
		else
			RB.setText(hideHint, "gui.dialog.NBHideLMPanel." + i18n + ".hideHint");

		if (i18n.equals("markers"))
		{
			rHideSelected.setSelected(Prefs.guiHideSelectedMarkers);
			rHideUnselected.setSelected(!Prefs.guiHideSelectedMarkers);
			countLabel.setText(RB.format("gui.dialog.NBHideLMPanel.countLabel",
				view.hiddenMarkerCount()));

			if (view.hiddenMarkerCount() == 0)
				bRestore.setEnabled(false);
		}
		else
		{
			rHideSelected.setSelected(Prefs.guiHideSelectedLines);
			rHideUnselected.setSelected(!Prefs.guiHideSelectedLines);
			countLabel.setText(RB.format("gui.dialog.NBHideLMPanel.countLabel",
				view.hiddenLineCount()));

			if (view.hiddenLineCount() == 0)
				bRestore.setEnabled(false);
		}

		bRestore.addActionListener(dialog);
	}

	void isOK()
	{
		if (i18n.equals("markers"))
			Prefs.guiHideSelectedMarkers = rHideSelected.isSelected();
		else
			Prefs.guiHideSelectedLines = rHideSelected.isSelected();
	}

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        hidePanel = new javax.swing.JPanel();
        rHideUnselected = new javax.swing.JRadioButton();
        rHideSelected = new javax.swing.JRadioButton();
        hideLabel = new javax.swing.JLabel();
        hideHint = new javax.swing.JLabel();
        showPanel = new javax.swing.JPanel();
        showLabel = new javax.swing.JLabel();
        bRestore = new javax.swing.JButton();
        countLabel = new javax.swing.JLabel();

        hidePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Hide markers:"));

        buttonGroup1.add(rHideUnselected);
        rHideUnselected.setText("Hide all the markers that are NOT currently selected");

        buttonGroup1.add(rHideSelected);
        rHideSelected.setText("Hide all the markers that ARE currently selected");

        hideLabel.setText("hideLabel");

        hideHint.setText("hideHint");

        javax.swing.GroupLayout hidePanelLayout = new javax.swing.GroupLayout(hidePanel);
        hidePanel.setLayout(hidePanelLayout);
        hidePanelLayout.setHorizontalGroup(
            hidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hidePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(hidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rHideSelected)
                    .addComponent(rHideUnselected)
                    .addComponent(hideLabel)
                    .addComponent(hideHint))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        hidePanelLayout.setVerticalGroup(
            hidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hidePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(hideLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rHideUnselected)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rHideSelected)
                .addGap(18, 18, 18)
                .addComponent(hideHint)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        showPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Show markers:"));

        showLabel.setText("Click to restore all currently hidden markers to the view:");

        bRestore.setText("Show hidden markers");

        countLabel.setText("(0 currently hidden)");

        javax.swing.GroupLayout showPanelLayout = new javax.swing.GroupLayout(showPanel);
        showPanel.setLayout(showPanelLayout);
        showPanelLayout.setHorizontalGroup(
            showPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(showPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(showPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(showLabel)
                    .addGroup(showPanelLayout.createSequentialGroup()
                        .addComponent(bRestore)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(countLabel)))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        showPanelLayout.setVerticalGroup(
            showPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(showPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(showLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(showPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bRestore)
                    .addComponent(countLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(showPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(hidePanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(hidePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(showPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JButton bRestore;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel countLabel;
    private javax.swing.JLabel hideHint;
    private javax.swing.JLabel hideLabel;
    private javax.swing.JPanel hidePanel;
    private javax.swing.JRadioButton rHideSelected;
    private javax.swing.JRadioButton rHideUnselected;
    private javax.swing.JLabel showLabel;
    private javax.swing.JPanel showPanel;
    // End of variables declaration//GEN-END:variables
}