// Copyright 2009-2015 Information & Computational Sciences, JHI. All rights
// reserved. Use is subject to the accompanying licence terms.

package flapjack.gui.dialog.prefs;

import java.awt.*;
import java.awt.event.*;
import java.util.*;
import javax.swing.*;

import flapjack.gui.*;

import scri.commons.gui.*;

class GeneralTabNB extends JPanel implements IPrefsTab, ActionListener
{
	private DefaultComboBoxModel<String> displayModel;
	private DefaultComboBoxModel<String> updateModel;

    public GeneralTabNB()
    {
        initComponents();

        setBackground((Color)UIManager.get("fjDialogBG"));

		// Interface settings
		generalPanel.setBorder(BorderFactory.createTitledBorder(RB.getString("gui.dialog.prefs.NBGeneralPanel.generalPanelTitle")));
		RB.setText(displayLabel, "gui.dialog.prefs.NBGeneralPanel.displayLabel");
		RB.setText(checkDecimal, "gui.dialog.prefs.NBGeneralPanel.checkDecimal");

		displayModel = new DefaultComboBoxModel<String>();
		displayModel.addElement(RB.getString("gui.dialog.prefs.NBGeneralPanel.auto"));
		displayModel.addElement(RB.getString("gui.dialog.prefs.NBGeneralPanel.en_GB"));
		displayModel.addElement(RB.getString("gui.dialog.prefs.NBGeneralPanel.en_US"));
		displayModel.addElement(RB.getString("gui.dialog.prefs.NBGeneralPanel.de_DE"));
		displayModel.addElement(RB.getString("gui.dialog.prefs.NBGeneralPanel.es_MX"));
		displayCombo.setModel(displayModel);


		// Update settings
		RB.setText(updateLabel, "gui.dialog.prefs.NBGeneralPanel.updateLabel");

		updateModel = new DefaultComboBoxModel<String>();
		updateModel.addElement(RB.getString("gui.dialog.prefs.NBGeneralPanel.updateNever"));
		updateModel.addElement(RB.getString("gui.dialog.prefs.NBGeneralPanel.updateStartup"));
		updateModel.addElement(RB.getString("gui.dialog.prefs.NBGeneralPanel.updateDaily"));
		updateModel.addElement(RB.getString("gui.dialog.prefs.NBGeneralPanel.updateWeekly"));
		updateModel.addElement(RB.getString("gui.dialog.prefs.NBGeneralPanel.updateMonthly"));
		updateCombo.setModel(updateModel);

		scalePanel.setBorder(BorderFactory.createTitledBorder(RB.getString("gui.dialog.prefs.NBGeneralPanel.scalePanel.title")));
		RB.setText(checkUI, "gui.dialog.prefs.NBGeneralPanel.scalePanel.checkUI");
		RB.setText(uiLabel, "gui.dialog.prefs.NBGeneralPanel.scalePanel.uiLabel");

		Hashtable<Integer, Component> uiLabels = new Hashtable<>();
		for (int i = 100; i <= 300; i+= 50)
			uiLabels.put(i, new JLabel(i + "%"));
		uiSlider.setLabelTable(uiLabels);
		checkUI.addActionListener(this);

		initSettings();
	}

    private int getLocaleIndex()
	{
		if (Prefs.localeText.equals("en_GB"))
			return 1;
		else if (Prefs.localeText.equals("en_US"))
			return 2;
		else if (Prefs.localeText.equals("de_DE"))
			return 3;
		else if (Prefs.localeText.equals("es_MX"))
			return 4;
		else
			return 0;
	}

	private void initSettings()
    {
    	displayCombo.setSelectedIndex(getLocaleIndex());
		checkDecimal.setSelected(Prefs.guiDecimalEnglish);
    	updateCombo.setSelectedIndex(Prefs.guiUpdateSchedule);

		setUIStates();
    }

	public void applySettings()
	{
		switch (displayCombo.getSelectedIndex())
		{
			case 1:  Prefs.localeText = "en_GB"; break;
			case 2:  Prefs.localeText = "en_US"; break;
			case 3:  Prefs.localeText = "de_DE"; break;
			case 4:  Prefs.localeText = "es_MX"; break;
			default: Prefs.localeText = "auto";
		}

		Prefs.guiDecimalEnglish = checkDecimal.isSelected();
		Prefs.guiUpdateSchedule = updateCombo.getSelectedIndex();
		Prefs.uiScale = uiSlider.getValue() / 100f;
	}

	public void setDefaults()
	{
	}

	public void actionPerformed(ActionEvent e)
	{
		if (e.getSource() == checkUI)
		{
			Prefs.uiScaleAuto = checkUI.isSelected();
			setUIStates();
		}
	}

	private void setUIStates()
	{
		Prefs.uiScale = UIScaler.init(Prefs.uiScale, Prefs.uiScaleAuto);

		checkUI.setSelected(Prefs.uiScaleAuto);
		uiSlider.setValue(Math.round(Prefs.uiScale * 100));
		uiSlider.setEnabled(!checkUI.isSelected());
	}

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        generalPanel = new javax.swing.JPanel();
        displayCombo = new javax.swing.JComboBox<String>();
        updateCombo = new javax.swing.JComboBox<String>();
        displayLabel = new javax.swing.JLabel();
        updateLabel = new javax.swing.JLabel();
        checkDecimal = new javax.swing.JCheckBox();
        scalePanel = new javax.swing.JPanel();
        checkUI = new javax.swing.JCheckBox();
        uiSlider = new javax.swing.JSlider();
        uiLabel = new javax.swing.JLabel();

        generalPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("General options (restart to apply):"));
        generalPanel.setOpaque(false);

        displayLabel.setLabelFor(displayCombo);
        displayLabel.setText("Interface display language:");

        updateLabel.setLabelFor(updateCombo);
        updateLabel.setText("Check for newer Flapjack versions:");

        checkDecimal.setText("Always use English decimal mark settings (eg 3.141 for pi)");

        javax.swing.GroupLayout generalPanelLayout = new javax.swing.GroupLayout(generalPanel);
        generalPanel.setLayout(generalPanelLayout);
        generalPanelLayout.setHorizontalGroup(
            generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(generalPanelLayout.createSequentialGroup()
                .addGroup(generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(generalPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(displayLabel)
                            .addComponent(updateLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(updateCombo, 0, 250, Short.MAX_VALUE)
                            .addComponent(displayCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(generalPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(checkDecimal)))
                .addContainerGap())
        );
        generalPanelLayout.setVerticalGroup(
            generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(generalPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(displayLabel)
                    .addComponent(displayCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(checkDecimal)
                .addGap(18, 18, 18)
                .addGroup(generalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateLabel)
                    .addComponent(updateCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        scalePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("High DPI compatibility (restart to apply):"));
        scalePanel.setOpaque(false);

        checkUI.setText("Attempt automatic display scaling");

        uiSlider.setMajorTickSpacing(25);
        uiSlider.setMaximum(300);
        uiSlider.setMinimum(100);
        uiSlider.setMinorTickSpacing(5);
        uiSlider.setPaintLabels(true);
        uiSlider.setPaintTicks(true);
        uiSlider.setSnapToTicks(true);

        uiLabel.setText("Some aspects of display scaling will be set by your o/s and are outwith Flapjack's control");

        javax.swing.GroupLayout scalePanelLayout = new javax.swing.GroupLayout(scalePanel);
        scalePanel.setLayout(scalePanelLayout);
        scalePanelLayout.setHorizontalGroup(
            scalePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scalePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(scalePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(uiSlider, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(scalePanelLayout.createSequentialGroup()
                        .addGroup(scalePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(checkUI)
                            .addComponent(uiLabel))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        scalePanelLayout.setVerticalGroup(
            scalePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scalePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(checkUI)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(uiSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(uiLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(generalPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(scalePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(generalPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scalePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox checkDecimal;
    private javax.swing.JCheckBox checkUI;
    private javax.swing.JComboBox<String> displayCombo;
    private javax.swing.JLabel displayLabel;
    private javax.swing.JPanel generalPanel;
    private javax.swing.JPanel scalePanel;
    private javax.swing.JLabel uiLabel;
    private javax.swing.JSlider uiSlider;
    private javax.swing.JComboBox<String> updateCombo;
    private javax.swing.JLabel updateLabel;
    // End of variables declaration//GEN-END:variables
}