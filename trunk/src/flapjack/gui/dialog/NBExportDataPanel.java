package flapjack.gui.dialog;

class NBExportDataPanel extends javax.swing.JPanel
{
	public NBExportDataPanel()
	{
		initComponents();
	}
	
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mapGroup = new javax.swing.ButtonGroup();
        datGroup = new javax.swing.ButtonGroup();
        mapPanel = new javax.swing.JPanel();
        markerLabel = new javax.swing.JLabel();
        rMapAll = new javax.swing.JRadioButton();
        rMapSelected = new javax.swing.JRadioButton();
        bExportMap = new javax.swing.JButton();
        datPanel = new javax.swing.JPanel();
        genotypeLabel = new javax.swing.JLabel();
        rDatAll = new javax.swing.JRadioButton();
        rDatSelected = new javax.swing.JRadioButton();
        bExportDat = new javax.swing.JButton();

        mapPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Export map data:"));

        markerLabel.setText("Markers to include:");

        mapGroup.add(rMapAll);
        rMapAll.setSelected(true);
        rMapAll.setText("All markers (all chromosomes)");

        mapGroup.add(rMapSelected);
        rMapSelected.setText("Selected markers only (all chromosomes)");

        bExportMap.setText("Export...");

        org.jdesktop.layout.GroupLayout mapPanelLayout = new org.jdesktop.layout.GroupLayout(mapPanel);
        mapPanel.setLayout(mapPanelLayout);
        mapPanelLayout.setHorizontalGroup(
            mapPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(mapPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(mapPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(rMapSelected)
                    .add(mapPanelLayout.createSequentialGroup()
                        .add(rMapAll)
                        .add(52, 52, 52))
                    .add(mapPanelLayout.createSequentialGroup()
                        .add(markerLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 146, Short.MAX_VALUE)
                        .add(bExportMap)))
                .addContainerGap())
        );
        mapPanelLayout.setVerticalGroup(
            mapPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(mapPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(mapPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.CENTER)
                    .add(markerLabel)
                    .add(bExportMap))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(rMapAll)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(rMapSelected)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        datPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Export genotype data:"));

        genotypeLabel.setText("Lines to include:");

        datGroup.add(rDatAll);
        rDatAll.setSelected(true);
        rDatAll.setText("All lines");

        datGroup.add(rDatSelected);
        rDatSelected.setText("Selected lines only");

        bExportDat.setText("Export...");

        org.jdesktop.layout.GroupLayout datPanelLayout = new org.jdesktop.layout.GroupLayout(datPanel);
        datPanel.setLayout(datPanelLayout);
        datPanelLayout.setHorizontalGroup(
            datPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(datPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(datPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(rDatSelected)
                    .add(datPanelLayout.createSequentialGroup()
                        .add(rDatAll)
                        .add(52, 52, 52))
                    .add(datPanelLayout.createSequentialGroup()
                        .add(genotypeLabel)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 160, Short.MAX_VALUE)
                        .add(bExportDat)))
                .addContainerGap())
        );
        datPanelLayout.setVerticalGroup(
            datPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(datPanelLayout.createSequentialGroup()
                .addContainerGap()
                .add(datPanelLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.CENTER)
                    .add(genotypeLabel)
                    .add(bExportDat))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(rDatAll)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(rDatSelected)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, datPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, mapPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(mapPanel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(datPanel, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bExportDat;
    private javax.swing.JButton bExportMap;
    private javax.swing.ButtonGroup datGroup;
    private javax.swing.JPanel datPanel;
    private javax.swing.JLabel genotypeLabel;
    private javax.swing.ButtonGroup mapGroup;
    private javax.swing.JPanel mapPanel;
    private javax.swing.JLabel markerLabel;
    private javax.swing.JRadioButton rDatAll;
    private javax.swing.JRadioButton rDatSelected;
    private javax.swing.JRadioButton rMapAll;
    private javax.swing.JRadioButton rMapSelected;
    // End of variables declaration//GEN-END:variables

}