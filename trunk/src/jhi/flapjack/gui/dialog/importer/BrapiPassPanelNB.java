// Copyright 2009-2016 Information & Computational Sciences, JHI. All rights
// reserved. Use is subject to the accompanying licence terms.

package jhi.flapjack.gui.dialog.importer;

import java.awt.*;
import java.awt.event.*;
import java.net.*;
import javax.swing.*;

import jhi.flapjack.gui.*;
import jhi.flapjack.io.brapi.*;

import scri.commons.gui.*;

class BrapiPassPanelNB extends JPanel implements ActionListener, IBrapiWizard
{
	private BrapiClient client;
	private BrapiImportDialog dialog;

	private DefaultComboBoxModel<XmlCategory> catModel = new DefaultComboBoxModel<>();
	private DefaultComboBoxModel<XmlResource> resModel = new DefaultComboBoxModel<>();

	private boolean isAuthenticated = false;

	public BrapiPassPanelNB(BrapiClient client, BrapiImportDialog dialog)
	{
		this.client = client;
		this.dialog = dialog;

		initComponents();

		useAuthentication.addActionListener(this);
	}

	public void actionPerformed(ActionEvent e)
	{
		if (e.getSource() == useAuthentication)
		{
			boolean state = useAuthentication.isSelected();

			userLabel.setEnabled(state);
			passLabel.setEnabled(state);
			username.setEnabled(state);
			password.setEnabled(state);
		}
	}

	void saveOptions()
	{
		if (useAuthentication.isSelected())
		{
			client.setUsername(username.getText());
			client.setPassword(new String(password.getPassword()));
		}
		else
		{
			client.setUsername(null);
			client.setPassword(null);
		}
	}

	void updateLabels()
	{
		Image img = client.getResource().getImage().getImage();
		img = img.getScaledInstance(48, 48, Image.SCALE_SMOOTH);
		connectionLabel.setIcon(new ImageIcon(img));

		connectionLabel.setText("Connecting to " + client.getResource().getName());
	}

	@Override
	public void onShow()
	{
		dialog.enableBack(true);
		dialog.enableNext(true);
	}

	@Override
	public void onNext()
	{
		if (useAuthentication.isSelected() && doAuthentication() || !useAuthentication.isSelected())
			dialog.setScreen(dialog.studiesPanel);
	}

	@Override
	public void onBack()
	{
		dialog.setScreen(dialog.dataPanel);
	}

	@Override
	public JPanel getPanel()
		{ return this; }

	@Override
	public String getCardName()
		{ return "pass"; }

	private boolean doAuthentication()
	{
		ProgressDialog pd = new ProgressDialog(new DataDownloader(),
			RB.getString("gui.dialog.importer.BrapiPassPanelNB.title"),
			RB.getString("gui.dialog.importer.BrapiPassPanelNB.message"),
			Flapjack.winMain);

		if (pd.failed("gui.error"))
			return false;

		if (isAuthenticated == false)
		{
			TaskDialog.error(
				RB.getString("gui.dialog.importer.BrapiPassPanelNB.error"),
				RB.getString("gui.text.close"));
			return false;
		}

		return true;
	}

	private class DataDownloader extends SimpleJob
	{
		public void runJob(int jobID)
			throws Exception
		{
			isAuthenticated = client.doAuthentication();
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel1 = new javax.swing.JPanel();
        connectionLabel = new javax.swing.JLabel();
        userLabel = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        passLabel = new javax.swing.JLabel();
        password = new javax.swing.JPasswordField();
        useAuthentication = new javax.swing.JCheckBox();
        jCheckBox1 = new javax.swing.JCheckBox();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Authentication details (optional):"));

        connectionLabel.setText("Connecting to resource:");

        userLabel.setText("Username to connect as:");
        userLabel.setEnabled(false);

        username.setEnabled(false);

        passLabel.setText("Password:");
        passLabel.setEnabled(false);

        password.setEnabled(false);

        useAuthentication.setText("This resource requires me to authenticate with it:");
        useAuthentication.setOpaque(false);

        jCheckBox1.setText("Remember my credentials");
        jCheckBox1.setEnabled(false);
        jCheckBox1.setOpaque(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(useAuthentication)
                            .addComponent(connectionLabel))
                        .addGap(0, 221, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(passLabel)
                            .addComponent(userLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jCheckBox1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(username)
                            .addComponent(password))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(connectionLabel)
                .addGap(18, 18, 18)
                .addComponent(useAuthentication)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userLabel)
                    .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passLabel)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel connectionLabel;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel passLabel;
    private javax.swing.JPasswordField password;
    private javax.swing.JCheckBox useAuthentication;
    private javax.swing.JLabel userLabel;
    private javax.swing.JTextField username;
	// End of variables declaration//GEN-END:variables
}